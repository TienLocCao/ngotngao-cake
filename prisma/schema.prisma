generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String?  @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]

  // ➕ Thêm 2 dòng này để fix lỗi:
  cartItems      CartItem[]
  orders         Order[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id    String  @id @default(cuid())
  name  String
  cakes Cake[]
}

model Cake {
  id              String     @id @default(cuid())
  name            String
  description     String
  fullDescription String
  imageUrl        String
  price           Decimal
  categoryId      String
  category        Category   @relation(fields: [categoryId], references: [id])
  sizes           CakeSize[]
  cartItems       CartItem[]
  orderItems      OrderItem[]
}

model CakeSize {
  id        String   @id @default(cuid())
  sizeLabel String   // e.g., Small, Medium, Large
  servings  String   // e.g., 6-8 servings
  price     Decimal
  cakeId    String
  cake      Cake     @relation(fields: [cakeId], references: [id])
  cartItems CartItem[]
  orderItems OrderItem[]
}

model CartItem {
  id       String   @id @default(cuid())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  cakeId   String
  cake     Cake     @relation(fields: [cakeId], references: [id])
  sizeId   String
  size     CakeSize @relation(fields: [sizeId], references: [id])
  quantity Int
  createdAt DateTime @default(now())
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  totalPrice Decimal
  status     String      // pending, paid, delivered, etc.
  createdAt  DateTime    @default(now())
  items      OrderItem[]
}

model OrderItem {
  id       String   @id @default(cuid())
  orderId  String
  order    Order    @relation(fields: [orderId], references: [id])
  cakeId   String
  cake     Cake     @relation(fields: [cakeId], references: [id])
  sizeId   String
  size     CakeSize @relation(fields: [sizeId], references: [id])
  quantity Int
  price    Decimal
}

model Message {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model TeamMember {
  id        String  @id @default(cuid())
  name      String
  role      String
  imageUrl  String
}

model SiteSetting {
  key   String @id
  value String
}

